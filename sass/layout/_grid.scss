.row {
    // standard form of grid lately
    // 10px = 1 rem
    // use max width to make this responsive
    max-width: $grid-width;
    // background-color: #eee;

    // this centers block elements
    margin: 0 auto;
    
    // selects everything except the last child
    &:not(:last-child) {
        margin-bottom: $gutter-vertical;
    }

    @include clearfix;

    // selects all elements with class attributes.
    // ^ helps select all classes that start with 'col-'
    // * and $ are other signs that help. start with col- and end with col-
    [class^="col-"] {
        // background-color: orangered;
        float: left;

        &:not(:last-child) {
            margin-right: $gutter-horizontal;
        }
    }

    .col-1-of-2 {
        // using calc function 
        // cannot mix rem with px
        // In SASS, need to use the variable within the function like so...#{variable}
        width: calc((100% - #{$gutter-horizontal}) / 2);

        /* PUT THIS IN THE CLASS SELECTOR ABOVE!
        // background-color: orangered;
        
        // creating a float column, so always float these to the left
        // float: left;

        // &:not(:last-child) {
        //     margin-right: $gutter-horizontal;
        // } */
    }

    .col-1-of-3 {
        width: calc((100% - (2 * #{$gutter-horizontal})) / 3);
        // DONT REPEAT YOURSELF (DRY)
        // so we put background-color, float, and margin-right into the col attribute selector
    }

    .col-1-of-4 {
        width: calc((100% - (3 * #{$gutter-horizontal})) / 4);
    }

    .col-2-of-3 {
        width: calc(2 * ((100% - (2 * #{$gutter-horizontal})) / 3) + #{$gutter-horizontal});
    }

    .col-2-of-4 {
        width: calc(2 * ((100% - (3 * #{$gutter-horizontal})) / 4) + #{$gutter-horizontal});
    }

    .col-3-of-4 {
        width: calc(3 * ((100% - (3 * #{$gutter-horizontal})) / 4) + (2 * #{$gutter-horizontal}));
    }
}

// .row::after {
